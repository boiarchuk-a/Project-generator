

services:
  app:
    build: ./app/
    image: event-planner-api:latest
    container_name: event-planner-api
    restart: unless-stopped
    env_file:
    - ./app/.env
    volumes:
      - ./app:/app
    depends_on:
      database:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    networks:
      - event-planner-network
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8080/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  ml_worker:
    build: ./ml_worker/
    image: event-planner-ml-worker:latest
    container_name: event-planner-ml-worker
    restart: unless-stopped
    command: python main.py
    env_file:
    - ./ml_worker/.env
    volumes:
      - ./ml_worker:/app
    depends_on:
      database:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    networks:
      - event-planner-network

  web-proxy:
    image: nginx:latest
    container_name: event-planner-nginx
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      app:
        condition: service_healthy
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      # - ./nginx/ssl:/etc/nginx/ssl
    networks:
      - event-planner-network

  rabbitmq:
    image: rabbitmq:3.12-management
    platform: linux/amd64
    container_name: text2title-rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER:-guest}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS:-guest}
    healthcheck:
      # вернёт 0, когда брокер жив
      test: [ "CMD", "rabbitmq-diagnostics", "-q", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  database:
    image: postgres:latest
    platform: linux/amd64
    environment:
      POSTGRES_DB: mydatabase
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - db_data:/var/lib/postgresql/data
    restart: unless-stopped

volumes:
  rabbitmq_data:
    driver: local
  db_data:
    driver: local

networks:
  event-planner-network:
    name: event-planner-network
    driver: bridge